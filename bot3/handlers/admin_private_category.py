from aiogram import F, Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from sqlalchemy.ext.asyncio import AsyncSession

from filters.chat_types import ChatTypeFilter, IsAdmin
from database.orm_query import CategoryDAL
from kbds.inline import admin_category_keyboard


class AdminCategoryStates(StatesGroup):
    category_name = State()


router = Router()
router.message.filter(ChatTypeFilter(["private"]), IsAdmin())


@router.message(F.text == '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏')
async def admin_category_menu(message: types.Message, session: AsyncSession):
    """–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    text = ('<b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</b>\n\n<i>- –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –µ—ë <b>—É–¥–∞–ª–∏—Ç—å</b>üóë\n'
            '- O—Å—Ç–æ—Ä–æ–∂–Ω–æ! –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã</i>')
    keyboard = await admin_category_keyboard(session, page=0)

    await message.answer(text, reply_markup=keyboard)


@router.callback_query(F.data.startswith('admin_category_menu'))
async def callback_admin_category_menu(callback: types.CallbackQuery, session: AsyncSession):
    """–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—è"""
    page = int(callback.data.split(':')[1])

    text = ('<b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</b>\n\n<i>- –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –µ—ë <b>—É–¥–∞–ª–∏—Ç—å</b>üóë '
            '(–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ! –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã)')
    keyboard = await admin_category_keyboard(session, page)

    await callback.message.edit_reply_markup(text, reply_markup=keyboard)


@router.callback_query(F.data == 'admin_add_category')
async def admin_add_category(callback: types.CallbackQuery, state: FSMContext):
    """–ó–∞–ø—Ä–æ—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    await callback.answer()

    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')

    await state.set_state(AdminCategoryStates.category_name)


@router.message(AdminCategoryStates.category_name)
async def admin_input_category(message: types.Message, state: FSMContext, session: AsyncSession):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    if message.content_type != 'text':
        return await message.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π')

    category_name = message.text

    await CategoryDAL.create(session, name=category_name)

    await message.answer('‚úÖ–ö–∞—Ç–µ–≥–æ—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞')

    await admin_category_menu(message, session)


@router.callback_query(F.data.startswith('admin_delete_category'))
async def admin_delete_category(callback: types.CallbackQuery, session: AsyncSession):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    category_id = int(callback.data.split(':')[1])

    category = await CategoryDAL.read(session, id=category_id)
    if len(category) == 0:
        return await callback.answer('–¢–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —É–∂–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
    category = category[0]

    kb = types.InlineKeyboardMarkup(inline_keyboard=[[
        types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='admin_cancel_delete_category'),
        types.InlineKeyboardButton(text='–î–∞', callback_data=f'admin_sure_delete_category:{category.id}'),
    ]])

    await callback.message.edit_text(
        f'–í—ã —É–≤–µ—Ä–µ—Ä–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é - {category.name}?',
        reply_markup=kb
    )


@router.callback_query(F.data == 'admin_cancel_delete_category')
async def admin_cancel_delete_category(callback: types.CallbackQuery, session: AsyncSession):
    """–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    await callback.message.edit_reply_markup(None)

    await admin_category_menu(callback.message, session)


@router.callback_query(F.data.startswith('admin_sure_delete_category'))
async def admin_sure_delete_category(callback: types.CallbackQuery, session: AsyncSession):
    """–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    await callback.message.edit_reply_markup(None)

    category_id = int(callback.data.split(':')[1])

    await CategoryDAL.delete(session, id=category_id)

    await callback.answer('–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞')

    await admin_category_menu(callback.message, session)
